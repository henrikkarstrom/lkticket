-- MySQL Script generated by MySQL Workbench
-- l√∂r 17 jun 2017 18:24:43
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema lkticket
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema lkticket
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `lkticket` DEFAULT CHARACTER SET utf8 COLLATE utf8_swedish_ci ;
USE `lkticket` ;

-- -----------------------------------------------------
-- Table `lkticket`.`shows`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`shows` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`performances`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`performances` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `start_date` TIMESTAMP NULL,
  `show_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_events_show_idx` (`show_id` ASC),
  CONSTRAINT `fk_events_show`
    FOREIGN KEY (`show_id`)
    REFERENCES `lkticket`.`shows` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`customers` (
  `id` INT NOT NULL,
  `email` VARCHAR(150) NULL,
  `phone` VARCHAR(150) NULL,
  `name` VARCHAR(150) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`orders` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created` TIMESTAMP NULL,
  `identifier` VARCHAR(45) NULL,
  `expires` TIMESTAMP NULL,
  `customer_id` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `identifier_UNIQUE` (`identifier` ASC),
  INDEX `fk_orders_customers1_idx` (`customer_id` ASC),
  CONSTRAINT `fk_orders_customers1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `lkticket`.`customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`rates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`rates` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `price` DECIMAL NULL,
  `discountcol` VARCHAR(45) NULL,
  `show_id` INT NOT NULL,
  `openForAllProfiles` TINYINT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_discount_shows1_idx` (`show_id` ASC),
  CONSTRAINT `fk_discount_shows1`
    FOREIGN KEY (`show_id`)
    REFERENCES `lkticket`.`shows` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`tickets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`tickets` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `identifier` VARCHAR(45) NULL,
  `seat_id` INT NOT NULL,
  `order_id` INT NOT NULL,
  `rate_id` INT NOT NULL,
  `price` DECIMAL NULL,
  `paid` TINYINT NULL,
  `printed` TINYINT NULL,
  `scanned` TINYINT NULL,
  `confirmed` TINYINT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ticket_performance_seat1_idx` (`seat_id` ASC),
  INDEX `fk_ticket_order1_idx` (`order_id` ASC),
  INDEX `fk_ticket_discount1_idx` (`rate_id` ASC),
  UNIQUE INDEX `identifier_UNIQUE` (`identifier` ASC),
  CONSTRAINT `fk_ticket_performance_seat1`
    FOREIGN KEY (`seat_id`)
    REFERENCES `lkticket`.`seats` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ticket_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `lkticket`.`orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ticket_discount1`
    FOREIGN KEY (`rate_id`)
    REFERENCES `lkticket`.`rates` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`categories` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `show_id` INT NOT NULL,
  `nbrOfTickets` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_seat_category_shows1_idx` (`show_id` ASC),
  CONSTRAINT `fk_seat_category_shows1`
    FOREIGN KEY (`show_id`)
    REFERENCES `lkticket`.`shows` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`profiles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`profiles` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`seats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`seats` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `performance_id` INT NOT NULL,
  `category_id` INT NOT NULL,
  `active_ticket_id` INT NULL,
  `profile_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_performance_seat_performance1_idx` (`performance_id` ASC),
  INDEX `fk_performance_seat_ticket1_idx` (`active_ticket_id` ASC),
  INDEX `fk_performance_seat_seat_category1_idx` (`category_id` ASC),
  INDEX `fk_performance_seat_profiles1_idx` (`profile_id` ASC),
  CONSTRAINT `fk_performance_seat_performance1`
    FOREIGN KEY (`performance_id`)
    REFERENCES `lkticket`.`performances` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_performance_seat_ticket1`
    FOREIGN KEY (`active_ticket_id`)
    REFERENCES `lkticket`.`tickets` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_performance_seat_seat_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `lkticket`.`categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_performance_seat_profiles1`
    FOREIGN KEY (`profile_id`)
    REFERENCES `lkticket`.`profiles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`prices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`prices` (
  `category_id` INT NOT NULL,
  `rate_id` INT NOT NULL,
  `price` DECIMAL NULL,
  PRIMARY KEY (`category_id`, `rate_id`),
  INDEX `fk_seat_category_has_discount_discount1_idx` (`rate_id` ASC),
  INDEX `fk_seat_category_has_discount_seat_category1_idx` (`category_id` ASC),
  CONSTRAINT `fk_seat_category_has_discount_seat_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `lkticket`.`categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_seat_category_has_discount_discount1`
    FOREIGN KEY (`rate_id`)
    REFERENCES `lkticket`.`rates` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`transactions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`transactions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `date` TIMESTAMP NULL,
  `order_id` INT NOT NULL,
  `profile_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_transactions_users1_idx` (`user_id` ASC),
  INDEX `fk_transactions_order1_idx` (`order_id` ASC),
  INDEX `fk_transactions_profiles1_idx` (`profile_id` ASC),
  CONSTRAINT `fk_transactions_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `lkticket`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transactions_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `lkticket`.`orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transactions_profiles1`
    FOREIGN KEY (`profile_id`)
    REFERENCES `lkticket`.`profiles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`ticket_transactions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`ticket_transactions` (
  `ticket_id` INT NOT NULL,
  `transaction_id` INT NOT NULL,
  `activity` INT NOT NULL,
  PRIMARY KEY (`ticket_id`, `transaction_id`, `activity`),
  INDEX `fk_ticket_has_transactions_transactions1_idx` (`transaction_id` ASC),
  INDEX `fk_ticket_has_transactions_ticket1_idx` (`ticket_id` ASC),
  CONSTRAINT `fk_ticket_has_transactions_ticket1`
    FOREIGN KEY (`ticket_id`)
    REFERENCES `lkticket`.`tickets` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ticket_has_transactions_transactions1`
    FOREIGN KEY (`transaction_id`)
    REFERENCES `lkticket`.`transactions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`payments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`payments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `transaction_id` INT NOT NULL,
  `order_id` INT NOT NULL,
  `amount` DECIMAL NULL,
  `paymentmethod` VARCHAR(45) NULL,
  `paymentreference` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_payments_orders1_idx` (`order_id` ASC),
  INDEX `fk_payments_transactions1_idx` (`transaction_id` ASC),
  CONSTRAINT `fk_payments_orders1`
    FOREIGN KEY (`order_id`)
    REFERENCES `lkticket`.`orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_payments_transactions1`
    FOREIGN KEY (`transaction_id`)
    REFERENCES `lkticket`.`transactions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`user_profiles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`user_profiles` (
  `user_id` INT NOT NULL,
  `profile_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `profile_id`),
  INDEX `fk_users_has_profiles_profiles1_idx` (`profile_id` ASC),
  INDEX `fk_users_has_profiles_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_users_has_profiles_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `lkticket`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_profiles_profiles1`
    FOREIGN KEY (`profile_id`)
    REFERENCES `lkticket`.`profiles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`customer_profiles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`customer_profiles` (
  `customer_id` INT NOT NULL,
  `profile_id` INT NOT NULL,
  PRIMARY KEY (`customer_id`, `profile_id`),
  INDEX `fk_customers_has_profiles_profiles1_idx` (`profile_id` ASC),
  INDEX `fk_customers_has_profiles_customers1_idx` (`customer_id` ASC),
  CONSTRAINT `fk_customers_has_profiles_customers1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `lkticket`.`customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customers_has_profiles_profiles1`
    FOREIGN KEY (`profile_id`)
    REFERENCES `lkticket`.`profiles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lkticket`.`profiles_has_discount`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lkticket`.`profiles_has_discount` (
  `profiles_id` INT NOT NULL,
  `discount_id` INT NOT NULL,
  PRIMARY KEY (`profiles_id`, `discount_id`),
  INDEX `fk_profiles_has_discount_discount1_idx` (`discount_id` ASC),
  INDEX `fk_profiles_has_discount_profiles1_idx` (`profiles_id` ASC),
  CONSTRAINT `fk_profiles_has_discount_profiles1`
    FOREIGN KEY (`profiles_id`)
    REFERENCES `lkticket`.`profiles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_profiles_has_discount_discount1`
    FOREIGN KEY (`discount_id`)
    REFERENCES `lkticket`.`rates` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
